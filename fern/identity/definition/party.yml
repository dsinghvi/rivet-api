# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

types:
  PartySummary:
    properties:
      party_id: uuid
      create_ts: datetime
      activity: PartyActivity
      external: PartyExternalLinks
      publicity: PartyPublicity
      party_size: integer
      members: PartyMemberSummaries
      thread_id: uuid

  PartyExternalLinks:
    docs: External links for a party.
    properties:
      chat:
        type: string
        docs: A link to the given party's chat thread.

  PartyActivity:
    docs: A union representing the activity of a given party.
    union:
      idle: {} # docs: A party activity denoting that the party is idle.
      matchmaker_finding_lobby: PartyActivityMatchmakerFindingLobby
      matchmaker_lobby: PartyActivityMatchmakerLobby

  PartyActivityMatchmakerFindingLobby:
    docs: A party activity denoting that the party is currently searching for a lobby.
    properties:
      game: GameHandle

  PartyActivityMatchmakerLobby:
    docs: A party activity denoting that the party is currently in a lobby.
    properties:
      lobby: PartyMatchmakerLobby
      game: GameHandle

  PartyMatchmakerLobby:
    docs: A party lobby.
    properties:
      lobby_id: uuid

  PartyPublicity:
    properties:
      public: PartyPublicityLevel
      mutual_followers: PartyPublicityLevel
      groups: PartyPublicityLevel

  PartyPublicityLevel:
    enum:
      - name: NONE
        value: none
      - name: VIEW
        value: view
      - name: JOIN
        value: join

  PartyMemberSummaries:
    type: list<PartyMemberSummary>
    docs: A list of party members.

  PartyMemberSummary:
    properties:
      identity: IdentityHandle
      is_leader:
        type: boolean
        docs: Whether or not this party member is the leader of the given party.
      join_ts: datetime
      state: PartyMemberState

  IdentityHandle:
    properties:
      identity_id: uuid
      display_name: commons.DisplayName
      account_number: commons.AccountNumber
      avatar_url:
        type: string
        docs: The URL of this identity's avatar image.
      presence: optional<IdentityPresence>
      party: PartyHandle
      is_registered:
        type: boolean
        docs: Whether or not this identity is registered with a linked account.
      external:
        type: IdentityExternalLinks
        docs: External links for an identity.

  PartyHandle:
    properties:
      party_id: uuid
      create_ts: datetime
      activity: PartyActivity
      external: PartyExternalLinks
