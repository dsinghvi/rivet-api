imports:
  commons: commons.yml

services:
  http:
    IdentityService:
      auth: true
      base-path: /identities
      endpoints:

        getIdentityProfile:
          path: /{identity_id}/profile
          path-parameters:
            identity_id: IdentityId
          request:
            name: GetIdentityProfileRequest
            query-parameters:
              watch_index: optional<string>
          response: GetIdentityProfileOutput
          errors:
            - commons.BadRequestError
            - commons.ForbiddenError
            - commons.NotFoundError
            - commons.UnauthorizedError
            - commons.RateLimitError
            - commons.InternalError

types:
  IdentityId: uuid

  Identifier: string

  DisplayName: string

  GetIdentityProfileOutput:
    properties:
      identity: IdentityProfile
      watch: commons.WatchResponse

  IdentityProfile:
    properties:
      identity_id: IdentityId
      display_name: DisplayName
      account_number: commons.AccountNumber
      avatar_url: string
      presence: optional<IdentityPresence>
      # skipping converting over party objects for now
      # party: PartySummary 
      is_registered: boolean
      external: IdentityExternalLinks
      is_admin: boolean
      is_game_linked: boolean
      dev_state: IdentityDevState
      follower_count: integer
      following_count:
        type: integer
        docs: Whether or not the requestee's identity is following this identity.
      following:
        type: boolean
        docs: Whether or not this identity following the requestee's identity.
      is_following_me:
        type: boolean
        docs: Whether or not this identity is both followng and is followed by the
          requestee's identity.
      is_mutual_following: boolean
      join_ts: datetime
      bio: Bio
      linked_accounts: list<IdentityLinkedAccount>
      groups: list<IdentityGroup>
      games: list<GameStatSummary>

  IdentityPresence:
    properties:
      update_ts: datetime
      status: IdentityStatus
      game_activity: IdentityGameActivity

  IdentityStatus:
    enum:
      - name: ONLINE
        value: online
      - name: AWAY
        value: away
      - name: offline
        value: offline

  IdentityGameActivity:
    properties:
      game: GameHandle
      message: string
      public_metadata: unknown
      mutual_metadata: unknown

  GameHandle:
    properties:
      game_id: uuid
      name_id: Identifier
      display_name: DisplayName
      log_url: optional<string>
      banner_url: optional<string>

  PartyHandle:
    properties:
      party_id: uuid
      create_ts: datetime
      activity: PartyActivity
      external: PartyExternalLinks

  PartyExternalLinks:
    properties:
      chat: string

  PartyActivity:
    union:
      idle: {}
      matchmaker_finding_lobby: PartyActivityMatchmakerFindingLobby
      matchmaker_lobby: PartyActivityMatchmakerLobby

  PartyActivityMatchmakerFindingLobby:
    properties:
      game: GameHandle

  PartyActivityMatchmakerLobby:
    properties:
      lobby: PartyMatchmakerLobby
      game: GameHandle

  PartyMatchmakerLobby:
    properties:
      lobby_id: uuid

  IdentityExternalLinks:
    properties:
      profile: string
      settings: optional<string>
      chat: optional<string>

  IdentityDevState: string

  Bio:
    type: string
    docs: Follows regex ^(?:[^\n\r]+\n?|\n){1,5}$

  IdentityLinkedAccount:
    union:
      email: IdentityEmailLinkedAccount

  IdentityEmailLinkedAccount:
    properties:
      email: Email

  Email: string

  IdentityGroup:
    properties:
      group: GroupHandle

  GroupHandle:
    properties:
      group_id: uuid
      display_name: DisplayName
      avatar_url:
        docs: The URL of this group's avatar image
        type: string
      external: GroupExternalLinks
      is_developer:
        docs: Whether or not this group is a developer group.
        type: optional<boolean>

  GroupExternalLinks:
    properties:
      profile: string
      chat: string

  GameStatSummary:
    properties:
      game: GameHandle
      # skipping stats for now
      # stats: GameStats 
